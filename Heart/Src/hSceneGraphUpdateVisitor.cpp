/********************************************************************
	created:	2009/11/05
	created:	5:11:2009   21:04
	filename: 	SceneGraphUpdateVisitor.cpp	
	author:		James
	
	purpose:	
*********************************************************************/

#include "Common.h"
#include "hSceneGraphUpdateVisitor.h"
#include "Heart.h"
#include "hSceneGraph.h"
#include "hSceneNodeMesh.h"
#include "hSceneNodeLocator.h"
#include "hSceneNodeCamera.h"


namespace Heart
{


	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hSceneGraphUpdateVisitor::hSceneGraphUpdateVisitor() :
		pSceneGraph_( NULL )
	{

	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hSceneGraphUpdateVisitor::~hSceneGraphUpdateVisitor()
	{

	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	void hSceneGraphUpdateVisitor::PreVisit( hSceneGraph* pSceneGraph )
	{
		pSceneGraph_ = pSceneGraph;
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	void hSceneGraphUpdateVisitor::Visit( hSceneNodeMesh& visit )
	{
		//visit.GlobalMatrix( *pSceneGraph_->matrixStackTop() );
		//visit.UpdateAABB();
		//visit.MakeClean();
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	void hSceneGraphUpdateVisitor::Visit( hSceneNodeLocator& visit )
	{
		//visit.GlobalMatrix( *pSceneGraph_->matrixStackTop() );
		//visit.UpdateAABB();
		//visit.MakeClean();
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	void hSceneGraphUpdateVisitor::Visit( hSceneNodeCamera& visit )
	{
		//visit.GlobalMatrix( *pSceneGraph_->matrixStackTop() );
		//visit.UpdateAABB();
		//visit.UpdateCamera();
		//visit.MakeClean();
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	void hSceneGraphUpdateVisitor::PostVisit( hSceneGraph* pSceneGraph )
	{
		pSceneGraph_ = NULL;
	}

}

#if 0

void hrSceneGraphUpdateVisitor::Visit( hrSceneGraphNodeCamera& visit )
{
	//hcPrintf( "Update Visitor - Visit Camera %s\n", visit.name() );
	visit.GlobalMartix( *pSceneGraph_->matrixStackTop() );
	//build the view matrix, etc
	visit.UpdateAABB();
	visit.updateCamera();
	visit.MakeClean();
	
}

void hrSceneGraphUpdateVisitor::Visit( hrSceneGraphNodeLight& visit )
{
	//hcPrintf( "Update Visitor - Visit Light %s\n", visit.name() );
	visit.GlobalMartix( *pSceneGraph_->matrixStackTop() );
	visit.UpdateAABB();
	visit.update();
	visit.MakeClean();
	
}

#endif