/********************************************************************
	created:	2010/09/04
	created:	4:9:2010   19:35
	filename: 	Keyboard.cpp	
	author:		James
	
	purpose:	
*********************************************************************/

#include "Common.h"
#include "hKeyboard.h"

namespace Heart
{
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hKeyboard::hKeyboard() :
		pKeyboard_( NULL )
		,pButtonKeyboard_( NULL )
	{

	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hKeyboard::~hKeyboard()
	{

	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hBool hKeyboard::Initialise( Device::ICharacterInput* pKbImpl, Device::IInput* pButtonKeyboard )
	{
		pKeyboard_ = pKbImpl;
		pButtonKeyboard_ = pButtonKeyboard;

		return hTrue;
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	const hChar* hKeyboard::GetBufferedText() const
	{
		if ( pKeyboard_ )
		{
			return pKeyboard_->GetCharBufferData();
		}
		return NULL;
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hBool hKeyboard::GetButtonDown( Device::InputID id ) const
	{
		if ( pButtonKeyboard_ )
		{
			return pButtonKeyboard_->GetButton( id ).raisingEdge_;
		}
		return hFalse;
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hBool hKeyboard::GetButtonDown( Device::InputID id, hUint32 accessKey ) const
	{
		if ( pButtonKeyboard_ )
		{
			return pButtonKeyboard_->GetButton( id, accessKey ).raisingEdge_;
		}
		return hFalse;
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hBool hKeyboard::GetButtonPressed( Device::InputID id ) const
	{
		if ( pButtonKeyboard_ )
		{
			return pButtonKeyboard_->GetButton( id ).buttonVal_;
		}
		return hFalse;
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hBool hKeyboard::GetButtonPressed( Device::InputID id, hUint32 accessKey ) const
	{
		if ( pButtonKeyboard_ )
		{
			return pButtonKeyboard_->GetButton( id, accessKey ).buttonVal_;
		}
		return hFalse;
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hBool hKeyboard::GetButtonUp( Device::InputID id ) const
	{
		if ( pButtonKeyboard_ )
		{
			return pButtonKeyboard_->GetButton( id ).fallingEdge_;
		}
		return hFalse;
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	hBool hKeyboard::GetButtonUp( Device::InputID id, hUint32 accessKey ) const
	{
		if ( pButtonKeyboard_ )
		{
			return pButtonKeyboard_->GetButton( id, accessKey ).fallingEdge_;
		}
		return hFalse;
	}

	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////

	Heart::Device::InputAxis hKeyboard::GetAxis( Device::InputID id ) const
	{
		if ( pButtonKeyboard_ )
		{
			return pButtonKeyboard_->GetAxis( id );
		}
		return Device::InputAxis();
	}
}