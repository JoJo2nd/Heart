/********************************************************************
    Written by James Moran
    Please see the file HEART_LICENSE.txt in the source's root directory.
*********************************************************************/

#include "testbed_precompiled.h"
#include "CreateTextureTest.h"


//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

void CreateTextureTest::PostEnter()
{
/*
	engine_->GetRenderer()->CreateTexture( texture_, 256, 256, 1, Heart::TFORMAT_ARGB8, "TestTexture" );

	Heart::hTextureMapInfo lock;
	texture_->Lock( 0, &lock );

	hUint32* pixel = (hUint32*)lock.ptr_;
	for ( hUint32 i = 0; i < 256; ++i )
	{
		for ( hUint32 i2 = 0; i2 < 256; ++i2 )
		{
			if ( i < 128 )
			{
				pixel[i2] = i2 < 128 ? Heart::hColour( 1.0f, 0.0f, 0.0f, 1.0f ) : Heart::hColour( 0.0f, 1.0f, 0.0f, 1.0f );
			}
			else
			{
				pixel[i2] = i2 < 128 ? Heart::hColour( 0.0f, 0.0f, 1.0f, 1.0f ) : Heart::hColour( 1.0f, 1.0f, 1.0f, 1.0f );
			}
		}
		pixel += lock.pitch_/sizeof(hUint32);
	}

	texture_->Unlock( &lock );
*/
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

hUint32 CreateTextureTest::Main()
{
	return Heart::hStateBase::CONTINUE;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

void CreateTextureTest::MainRender()
{

}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

hUint32 CreateTextureTest::Leave()
{
	return Heart::hStateBase::FINISHED;
}
