databuilder = require "databuilder"fs = require "filesystem"gpuprog = require "gpuprogram"texture = require "texture"material = require "material"mesh = require "mesh"font = require "font"print("Starting custom build script")-- Materials & Shaders Util varslocal infiles=nillocal depfiles=nillocal progparams=nillocal materialpath=nildatabuilder.sourcerootpath("C:/dev/heart_lua/data")--fs.currentpath())databuilder.destrootpath(string.format("%s/deploy/game/GAMEDATA","C:/dev/heart_lua"))--fs.currentpath()))databuilder.addbuilder {    typename="texture",    buildfunc= function (inputfiles, depfiles, params, path)        return texture.compile(inputfiles, depfiles, params, path)    end,}databuilder.addbuilder {    typename="gpu_prog",    buildfunc= function (inputfiles, depfiles, params, path)        return gpuprog.compile(inputfiles, depfiles, params, path)    end,    parameters = {        debug=true,    }}databuilder.addbuilder {    typename="mat_fx",    buildfunc= function (inputfiles, depfiles, params, path)        return material.compile(inputfiles, depfiles, params, path)    end,}databuilder.addbuilder {    typename="mesh",    buildfunc= function (inputfiles, depfiles, params, path)        return mesh.compile(inputfiles, depfiles, params, path)    end,}databuilder.addbuilder {    typename="font",    buildfunc= function (inputfiles, depfiles, params, path)        return font.compile(inputfiles, depfiles, params, path)    end,}dofile("build_scripts/package_unittest.lua")dofile("build_scripts/package_materials.lua")dofile("build_scripts/package_sibenik.lua")dofile("build_scripts/package_instancetest.lua")dofile("build_scripts/package_complexmesh1.lua")dofile("build_scripts/package_complexmesh2.lua")