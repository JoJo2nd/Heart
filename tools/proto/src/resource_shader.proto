
package Heart.proto;

enum eShaderRenderSystem {
	eShaderRenderSystem_None 	= -1;
	eShaderRenderSystem_D3D11 	= 0;
	eShaderRenderSystem_OpenGL 	= 1;
    eShaderRenderSystem_D3D9    = 2;
}

enum eShaderType {
//  eShaderType_Vertex		= 0;
//  eShaderType_Pixel		= 1;
//  eShaderType_Geometry	= 2;
//  eShaderType_Hull		= 3;
//  eShaderType_Domain		= 4;
//  eShaderType_Compute		= 5;
    // Start - Deprecated 
//  eShaderType_vs4_0 = 6;
//  eShaderType_vs4_1 = 7;
//  eShaderType_vs5_0 = 8;
//  eShaderType_ps4_0 = 9;
//  eShaderType_ps4_1 = 10;
//  eShaderType_ps5_0 = 11;
//  eShaderType_gs4_0 = 12;
//  eShaderType_gs4_1 = 13;
//  eShaderType_gs5_0 = 14;
//  eShaderType_cs4_0 = 15;
//  eShaderType_cs4_1 = 16;
//  eShaderType_cs5_0 = 17;
//  eShaderType_hs5_0 = 18;
//  eShaderType_ds5_0 = 19;
    // End - Deprecated
    // OpenGL ES2 
    eShaderType_ES2_vs = 20;
    eShaderType_ES2_ps = 21;
    // WebGL 
    eShaderType_WebGL_vs = 22;
    eShaderType_WebGL_ps = 23;
    // OpenGL ES3
    eShaderType_ES3_vs = 24;
    eShaderType_ES3_ps = 25;
    // DirectX 10
    eShaderType_FL10_vs = 26;
    eShaderType_FL10_ps = 27;
    eShaderType_FL10_gs = 28;
    eShaderType_FL10_cs = 29;
    // DirectX 11
    eShaderType_FL11_vs = 30;
    eShaderType_FL11_ps = 31;
    eShaderType_FL11_gs = 32;
    eShaderType_FL11_cs = 33;
    eShaderType_FL11_hs = 34;
    eShaderType_FL11_ds = 35;
    // Direct3D 9
    eShaderType_D3D9_vs = 36;
    eShaderType_D3D9_ps = 37;
}

enum eShaderStreamType {
	eShaderStreamType_float = 0;
	eShaderStreamType_sint32 = 1;
	eShaderStreamType_uint32 = 2;
}

message ShaderIncludeSource {
	optional string filepath = 1;
	optional string source = 2;
	optional string filepath_short = 3;
}

message ShaderInputStream {
	required string semantic = 1 [default = "position"];
	required eShaderStreamType type = 2 [default = eShaderStreamType_float];
	optional uint32 semanticIndex = 3;
	optional uint32 elementCount = 4;
}

message ShaderResource {
	optional eShaderType type = 1;
	optional string source = 2;
	optional bytes compiledProgram = 3;
	optional string entry = 7;
	optional uint32 profile = 8;
	repeated ShaderInputStream inputStreams = 9;
	optional eShaderRenderSystem renderSystem = 10;
}

message ShaderResourceContainer {
	repeated ShaderResource shaderResources = 1;
}
