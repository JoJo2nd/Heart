import "resource_common.proto";
import "resource_renderstate.proto";

package Heart.proto;

enum MaterialParameterType {
    matparam_none    = 0;
    matparam_float   = 1;
    matparam_int     = 2;
    matparam_texture = 3;
}

message SamplerState {
    optional renderstate.SamplerState filter = 1 [default = point];
    optional renderstate.SamplerBorder addressU = 2 [default = clamp];
    optional renderstate.SamplerBorder addressV = 3 [default = clamp];
    optional renderstate.SamplerBorder addressW = 4 [default = clamp];
    optional float  mipLODBias = 5 [default = 0];
    optional uint32 maxAnisotropy = 6 [default = 1];
    optional Colour borderColour = 7;
    optional float  minLOD = 8 [default = 0];
    optional float  maxLOD = 9 [default = 1000];
}

message BlendState {
	optional bool   blendEnable = 1 [default = false];
	optional renderstate.BlendOp srcBlend = 2 [default = BlendOne];
	optional renderstate.BlendOp destBlend = 3 [default = BlendOne];
	optional renderstate.BlendFunction blendOp = 4 [default = Add];
	optional renderstate.BlendOp srcBlendAlpha = 5 [default = BlendOne];
	optional renderstate.BlendOp destBlendAlpha = 6 [default = BlendOne];
	optional renderstate.BlendFunction blendOpAlpha = 7 [default = Add];
	optional uint32 renderTargetWriteMask = 8 [default = 0xFFFFFFFF];	//  hUint32               
}

message DepthStencilState {
    optional bool depthEnable = 1 [default = false];
    optional uint32 depthWriteMask = 2 [default = 0xFFFFFFFF];
    optional renderstate.FunctionCompare depthFunc = 3 [default = CompareLess];
    optional bool stencilEnable = 4 [default = false];
    optional uint32 stencilReadMask = 5 [default = 0xFFFFFFFF];
    optional uint32 stencilWriteMask = 6 [default = 0xFFFFFFFF];
    optional renderstate.StencilOp stencilFailOp = 7 [default = StencilKeep];
    optional renderstate.StencilOp stencilDepthFailOp = 8 [default = StencilKeep];
    optional renderstate.StencilOp stencilPassOp = 9 [default = StencilKeep];
    optional renderstate.FunctionCompare stencilFunc = 10 [default = CompareAlways];
    optional uint32 stencilRef = 11 [default = 0];
}

message RasterizerState {
    optional renderstate.FillMode fillMode = 1 [default = Solid];
    optional renderstate.CullMode cullMode = 2 [default = CullClockwise];
    optional uint32 frontCounterClockwise = 3 [default = 0];
    optional uint32 depthBias = 4 [default = 0];
    optional float depthBiasClamp = 5 [default = 0];
    optional float slopeScaledDepthBias = 6 [default = 0];
    optional uint32 depthClipEnable = 7 [default = 0];
    optional bool scissorEnable = 8 [default = false];
}

message MaterialPass {
	optional BlendState blend = 1;
	optional DepthStencilState depthStencil = 2;
	optional RasterizerState rasterizer = 3;
	optional string vertex = 4;
	optional string pixel = 5;
	optional string geometry = 6;
	optional string hull = 7;
	optional string domain = 8;
	optional string compute = 9;
}

message MaterialTechnique {
	required string techniqueName = 1;
	repeated MaterialPass passes = 2;
	optional bool transparent = 3;
	optional uint32 layer = 4;
}

message MaterialGroup {
	required string groupName = 1;
	repeated MaterialTechnique technique = 2;
}

message MaterialSampler   {
	required string samplerName = 1;
	optional SamplerState samplerState = 2;
}

message MaterialParameter {
	required string paramName = 1;
	optional string resourceId = 2;
	repeated float  floatValues = 3;
	repeated sint32 intValues = 4;
	repeated Colour colourValues = 5;
}

message MaterialResource {
	repeated MaterialSampler samplers = 1;
	repeated MaterialParameter parameters = 2;
	repeated MaterialTechnique techniques = 3;
    optional int32 totalGroups = 4;
    optional int32 totalTechniques = 5;
    optional int32 totalPasses = 6;
    optional int32 totalSamplers = 7;
    optional int32 totalParameters = 8;
}